import 'dart:convert';

import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;

class LoginAndRegisterHttp extends StatefulWidget {
  const LoginAndRegisterHttp({Key? key}) : super(key: key);

  @override
  State<LoginAndRegisterHttp> createState() => _LoginAndRegisterHttpState();
}

class _LoginAndRegisterHttpState extends State<LoginAndRegisterHttp> {
  var emailController = TextEditingController();
  var passController = TextEditingController();

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SafeArea(
        child: Center(
          child: Column(
            children: [
              Text(
                "Login",
                style: TextStyle(fontSize: 25),
              ),
              SizedBox(height: 20),
              TextFormField(
                controller: emailController,
                decoration: const InputDecoration(
                  labelText: "Email",
                  border: OutlineInputBorder(),
                  suffixIcon: Icon(Icons.email),
                ),
              ),
              SizedBox(height: 10),
              TextFormField(
                controller: passController,
                obscureText: true,
                decoration: const InputDecoration(
                  labelText: "Password",
                  border: OutlineInputBorder(),
                  suffixIcon: Icon(Icons.remove_red_eye),
                ),
              ),
              OutlinedButton.icon(
                  onPressed: () {
                    login(
                      emailController.text,
                      passController.text,
                    );
                  },
                  icon: Icon(Icons.login),
                  label: Text("Giriş Yap")),
            ],
          ),
        ),
      ),
    );
  }

  Future<SignInModel?> login(String email, password) async {
    if (email.isNotEmpty && password.isNotEmpty) {
      //  var baseUrl = Uri.parse("http://isacanapi.tuzlatest.com/uyegirisi");
      //  final String baseUrl = "http://isacanapi.tuzlatest.com/uyegirisi";

      Map<String, dynamic> jsonVeri = {
        "username": email,
        "password": password,
      };
      var response = await http.post(
        Uri.parse("http://isacanapi.tuzlatest.com/uyegirisi"),
        body: jsonVeri,
        // body: ({
        //   "username": emailController.text,
        //   "password": passController.text,
        // }),
        headers: {
          'Accept': 'application/json',
          'Content-Type': 'application/x-www-form-urlencoded',
        },
      );
      if (response.statusCode == 200) {
        var json = response.body;
        print("Giriş Yapıldı " + response.toString());
        Navigator.push(
            context, MaterialPageRoute(builder: (context) => Home()));
        ScaffoldMessenger.of(context)
            .showSnackBar(SnackBar(content: Text("giriş yapıldı")));
        return signInModelFromJson(json);
      } else {
        ScaffoldMessenger.of(context)
            .showSnackBar(SnackBar(content: Text("Giriş Yapılamadı")));
        print(
            "api ile bağlantı kurulamadı hata statusode : ${response.statusCode}");
      }
    } else {
      print("MAİL VE ŞİFRE GİRİLMEDİ");
      ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(content: Text("Mail ve şifre girişi yapılmadı")));
    }
  }
}

class Home extends StatelessWidget {
  const Home({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.teal,
      body: SafeArea(
        child: Center(
          child: Column(
            children: [
              SizedBox(
                height: 20,
              ),
              Text(
                "Blog başlığı",
                style: TextStyle(fontSize: 23),
              ),
              Text(
                "Blog içeriği",
                overflow: TextOverflow.ellipsis,
                maxLines: 4,
                style: TextStyle(fontSize: 20),
              ),
            ],
          ),
        ),
      ),
    );
  }
}

///  Modelllll
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/

// To parse this JSON data, do
//
//     final login = loginFromJson(jsonString);

// class LoginModel {
// /*
// {
//   "access_token": "pZkUvpktdwxrdJ4FKj7UUN0M30ZDSFa4C6Y487FGRAz7SQHS7DNAuAuxuDeYIG4pNuiUgq0IsyUS4WekXTB-eQfvCjCIF-HQgqDIIn5EbfJOssJQhVJCd2Yj3_Lj6i22odtyTs68zyMJRbUeHXy2ysxYpV5YLpO_cq_QPenlzDrwr-NXJ4Ex3SrfQJTX1rKlhdWcrNgPxs8p8_50iUB79NY7zmsOrKelGaopjfVKtbaNroKNWfFu5ZrNvMT8VsVC",
//   "token_type": "bearer",
//   "expires_in": 86399
// }
// */
//
//   String? accessToken;
//   String? tokenType;
//   int? expiresIn;
//
//   LoginModel({
//     this.accessToken,
//     this.tokenType,
//     this.expiresIn,
//   });
//
//   LoginModel.fromJson(Map<String, dynamic> json) {
//     accessToken = json['access_token']?.toString();
//     tokenType = json['token_type']?.toString();
//     expiresIn = json['expires_in']?.toInt();
//   }
//
//   Map<String, dynamic> toJson() {
//     final data = <String, dynamic>{};
//     data['access_token'] = accessToken;
//     data['token_type'] = tokenType;
//     data['expires_in'] = expiresIn;
//     return data;
//   }
// }

/// QUİCKTYPE sitesindeki model
/*
SignInModel loginFromJson(String str) => SignInModel.fromJson(json.decode(str));

String loginToJson(SignInModel data) => json.encode(data.toJson());

class SignInModel {
  SignInModel({
    required this.accessToken,
    required this.tokenType,
    required this.expiresIn,
  });

  String accessToken;
  String tokenType;
  int expiresIn;

  factory SignInModel.fromJson(Map<String, dynamic> json) => SignInModel(
        accessToken: json["access_token"] == null ? null : json["access_token"],
        tokenType: json["token_type"] == null ? null : json["token_type"],
        expiresIn: json["expires_in"] == null ? null : json["expires_in"],
      );

  Map<String, dynamic> toJson() => {
        "access_token": accessToken == null ? null : accessToken,
        "token_type": tokenType == null ? null : tokenType,
        "expires_in": expiresIn == null ? null : expiresIn,
      };
}
*/


SignInModel signInModelFromJson(String str) => SignInModel.fromJson(json.decode(str));

String signInModelToJson(SignInModel data) => json.encode(data.toJson());

class SignInModel {
  SignInModel({
    required this.accessToken,
    required this.tokenType,
    required this.expiresIn,
  });

  String accessToken;
  String tokenType;
  int expiresIn;

  factory SignInModel.fromJson(Map<String, dynamic> json) => SignInModel(
    accessToken: json["access_token"] == null ? null : json["access_token"],
    tokenType: json["token_type"] == null ? null : json["token_type"],
    expiresIn: json["expires_in"] == null ? null : json["expires_in"],
  );

  Map<String, dynamic> toJson() => {
    "access_token": accessToken == null ? null : accessToken,
    "token_type": tokenType == null ? null : tokenType,
    "expires_in": expiresIn == null ? null : expiresIn,
  };
}
